{"ast":null,"code":"var _jsxFileName = \"/Users/jh.seok/\\u1109\\u1165\\u11A8\\u110C\\u116E\\u1112\\u1174/\\u1100\\u1162\\u1107\\u1161\\u11AF/\\u110B\\u1169\\u1102\\u1173\\u11AF\\u110B\\u1174\\u110C\\u1175\\u11B8/Joohee/website-ohouse-mobile-pttrns/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nimport { Global } from '@emotion/react';\nimport { globalStyles } from './styles/global';\nimport Header from './components/Header';\nimport FilterBar from './components/FilterBar';\nimport ScreenList from './components/ScreenList';\nimport { fetchFramesMetadata, getAllTags } from './api/figma';\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [screens, setScreens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const [tags, setTags] = useState({\n    screenType: [],\n    uiComponents: []\n  });\n  const [selectedScreenTypes, setSelectedScreenTypes] = useState([]);\n  const [selectedUIComponents, setSelectedUIComponents] = useState([]);\n  const loadScreens = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchFramesMetadata();\n      setScreens(data);\n      setTags(getAllTags(data));\n    } catch (err) {\n      console.error('Figma 연동 에러:', err);\n      setError('화면 목록을 불러오는데 실패했습니다. 다시 시도해주세요.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    loadScreens();\n  }, [loadScreens, retryCount]);\n  const handleRetry = () => {\n    setRetryCount(prev => prev + 1);\n  };\n\n  // 필터링된 screens\n  const filteredScreens = screens.filter(screen => {\n    const matchScreen = selectedScreenTypes.length === 0 || (screen.screenType || []).some(t => selectedScreenTypes.includes(t));\n    const matchUI = selectedUIComponents.length === 0 || (screen.uiComponents || []).some(t => selectedUIComponents.includes(t));\n    return matchScreen && matchUI;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Global, {\n      styles: globalStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(ErrorWrap, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        className: \"retry-button\",\n        children: \"\\uB2E4\\uC2DC \\uC2DC\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(SpinnerWrap, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uD654\\uBA74 \\uBAA9\\uB85D\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n        total: filteredScreens.length,\n        tags: tags,\n        selectedScreenTypes: selectedScreenTypes,\n        selectedUIComponents: selectedUIComponents,\n        onChangeScreenTypes: setSelectedScreenTypes,\n        onChangeUIComponents: setSelectedUIComponents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScreenList, {\n        screens: filteredScreens\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(App, \"MjlZNAolrHX+LbQw39iKce/JBhA=\");\n_c = App;\nconst SpinnerWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 300px;\n  .spinner {\n    text-align: center;\n    color: #666;\n    font-size: 15px;\n    padding: 60px 0 20px 0;\n  }\n  .loader {\n    display: inline-block;\n    width: 32px;\n    height: 32px;\n    border: 4px solid #e5e5e5;\n    border-top: 4px solid #888;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    margin-bottom: 8px;\n  }\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c2 = SpinnerWrap;\nconst ErrorWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 300px;\n  text-align: center;\n  padding: 20px;\n\n  .error-message {\n    color: #666;\n    font-size: 15px;\n    margin-bottom: 16px;\n  }\n\n  .retry-button {\n    padding: 8px 16px;\n    background: #222;\n    color: white;\n    border: none;\n    border-radius: 6px;\n    font-size: 14px;\n    cursor: pointer;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: #444;\n    }\n  }\n`;\n_c3 = ErrorWrap;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SpinnerWrap\");\n$RefreshReg$(_c3, \"ErrorWrap\");","map":{"version":3,"names":["useEffect","useState","useCallback","Global","globalStyles","Header","FilterBar","ScreenList","fetchFramesMetadata","getAllTags","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","screens","setScreens","loading","setLoading","error","setError","retryCount","setRetryCount","tags","setTags","screenType","uiComponents","selectedScreenTypes","setSelectedScreenTypes","selectedUIComponents","setSelectedUIComponents","loadScreens","data","err","console","handleRetry","prev","filteredScreens","filter","screen","matchScreen","length","some","t","includes","matchUI","children","styles","fileName","_jsxFileName","lineNumber","columnNumber","ErrorWrap","className","onClick","SpinnerWrap","total","onChangeScreenTypes","onChangeUIComponents","_c","div","_c2","_c3","$RefreshReg$"],"sources":["/Users/jh.seok/석주희/개발/오늘의집/Joohee/website-ohouse-mobile-pttrns/src/App.tsx"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\nimport { Global } from '@emotion/react';\nimport { globalStyles } from './styles/global';\nimport Header from './components/Header';\nimport FilterBar from './components/FilterBar';\nimport ScreenList from './components/ScreenList';\nimport { fetchFramesMetadata, getAllTags } from './api/figma';\nimport styled from '@emotion/styled';\n\nfunction App() {\n  const [screens, setScreens] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const [tags, setTags] = useState<{ screenType: string[]; uiComponents: string[] }>({ screenType: [], uiComponents: [] });\n  const [selectedScreenTypes, setSelectedScreenTypes] = useState<string[]>([]);\n  const [selectedUIComponents, setSelectedUIComponents] = useState<string[]>([]);\n\n  const loadScreens = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await fetchFramesMetadata();\n      setScreens(data);\n      setTags(getAllTags(data));\n    } catch (err) {\n      console.error('Figma 연동 에러:', err);\n      setError('화면 목록을 불러오는데 실패했습니다. 다시 시도해주세요.');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadScreens();\n  }, [loadScreens, retryCount]);\n\n  const handleRetry = () => {\n    setRetryCount(prev => prev + 1);\n  };\n\n  // 필터링된 screens\n  const filteredScreens = screens.filter(screen => {\n    const matchScreen = selectedScreenTypes.length === 0 || (screen.screenType || []).some((t: string) => selectedScreenTypes.includes(t));\n    const matchUI = selectedUIComponents.length === 0 || (screen.uiComponents || []).some((t: string) => selectedUIComponents.includes(t));\n    return matchScreen && matchUI;\n  });\n\n  return (\n    <>\n      <Global styles={globalStyles} />\n      <Header />\n      {error ? (\n        <ErrorWrap>\n          <div className=\"error-message\">{error}</div>\n          <button onClick={handleRetry} className=\"retry-button\">\n            다시 시도\n          </button>\n        </ErrorWrap>\n      ) : loading ? (\n        <SpinnerWrap>\n          <div className=\"spinner\">\n            <div className=\"loader\" />\n            <div>화면 목록을 불러오는 중입니다...</div>\n          </div>\n        </SpinnerWrap>\n      ) : (\n        <>\n          <FilterBar\n            total={filteredScreens.length}\n            tags={tags}\n            selectedScreenTypes={selectedScreenTypes}\n            selectedUIComponents={selectedUIComponents}\n            onChangeScreenTypes={setSelectedScreenTypes}\n            onChangeUIComponents={setSelectedUIComponents}\n          />\n          <ScreenList screens={filteredScreens} />\n        </>\n      )}\n    </>\n  );\n}\n\nconst SpinnerWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 300px;\n  .spinner {\n    text-align: center;\n    color: #666;\n    font-size: 15px;\n    padding: 60px 0 20px 0;\n  }\n  .loader {\n    display: inline-block;\n    width: 32px;\n    height: 32px;\n    border: 4px solid #e5e5e5;\n    border-top: 4px solid #888;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n    margin-bottom: 8px;\n  }\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst ErrorWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 300px;\n  text-align: center;\n  padding: 20px;\n\n  .error-message {\n    color: #666;\n    font-size: 15px;\n    margin-bottom: 16px;\n  }\n\n  .retry-button {\n    padding: 8px 16px;\n    background: #222;\n    color: white;\n    border: none;\n    border-radius: 6px;\n    font-size: 14px;\n    cursor: pointer;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: #444;\n    }\n  }\n`;\n\nexport default App; "],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,mBAAmB,EAAEC,UAAU,QAAQ,aAAa;AAC7D,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAQ,EAAE,CAAC;EACjD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACwB,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAmD;IAAE0B,UAAU,EAAE,EAAE;IAAEC,YAAY,EAAE;EAAG,CAAC,CAAC;EACxH,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG7B,QAAQ,CAAW,EAAE,CAAC;EAC5E,MAAM,CAAC8B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG/B,QAAQ,CAAW,EAAE,CAAC;EAE9E,MAAMgC,WAAW,GAAG/B,WAAW,CAAC,YAAY;IAC1C,IAAI;MACFkB,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMY,IAAI,GAAG,MAAM1B,mBAAmB,CAAC,CAAC;MACxCU,UAAU,CAACgB,IAAI,CAAC;MAChBR,OAAO,CAACjB,UAAU,CAACyB,IAAI,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACf,KAAK,CAAC,cAAc,EAAEc,GAAG,CAAC;MAClCb,QAAQ,CAAC,iCAAiC,CAAC;IAC7C,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACdiC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACA,WAAW,EAAEV,UAAU,CAAC,CAAC;EAE7B,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBb,aAAa,CAACc,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGtB,OAAO,CAACuB,MAAM,CAACC,MAAM,IAAI;IAC/C,MAAMC,WAAW,GAAGb,mBAAmB,CAACc,MAAM,KAAK,CAAC,IAAI,CAACF,MAAM,CAACd,UAAU,IAAI,EAAE,EAAEiB,IAAI,CAAEC,CAAS,IAAKhB,mBAAmB,CAACiB,QAAQ,CAACD,CAAC,CAAC,CAAC;IACtI,MAAME,OAAO,GAAGhB,oBAAoB,CAACY,MAAM,KAAK,CAAC,IAAI,CAACF,MAAM,CAACb,YAAY,IAAI,EAAE,EAAEgB,IAAI,CAAEC,CAAS,IAAKd,oBAAoB,CAACe,QAAQ,CAACD,CAAC,CAAC,CAAC;IACtI,OAAOH,WAAW,IAAIK,OAAO;EAC/B,CAAC,CAAC;EAEF,oBACEnC,OAAA,CAAAE,SAAA;IAAAkC,QAAA,gBACEpC,OAAA,CAACT,MAAM;MAAC8C,MAAM,EAAE7C;IAAa;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCzC,OAAA,CAACP,MAAM;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACThC,KAAK,gBACJT,OAAA,CAAC0C,SAAS;MAAAN,QAAA,gBACRpC,OAAA;QAAK2C,SAAS,EAAC,eAAe;QAAAP,QAAA,EAAE3B;MAAK;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5CzC,OAAA;QAAQ4C,OAAO,EAAEnB,WAAY;QAACkB,SAAS,EAAC,cAAc;QAAAP,QAAA,EAAC;MAEvD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,GACVlC,OAAO,gBACTP,OAAA,CAAC6C,WAAW;MAAAT,QAAA,eACVpC,OAAA;QAAK2C,SAAS,EAAC,SAAS;QAAAP,QAAA,gBACtBpC,OAAA;UAAK2C,SAAS,EAAC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1BzC,OAAA;UAAAoC,QAAA,EAAK;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,gBAEdzC,OAAA,CAAAE,SAAA;MAAAkC,QAAA,gBACEpC,OAAA,CAACN,SAAS;QACRoD,KAAK,EAAEnB,eAAe,CAACI,MAAO;QAC9BlB,IAAI,EAAEA,IAAK;QACXI,mBAAmB,EAAEA,mBAAoB;QACzCE,oBAAoB,EAAEA,oBAAqB;QAC3C4B,mBAAmB,EAAE7B,sBAAuB;QAC5C8B,oBAAoB,EAAE5B;MAAwB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFzC,OAAA,CAACL,UAAU;QAACU,OAAO,EAAEsB;MAAgB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACxC,CACH;EAAA,eACD,CAAC;AAEP;AAACrC,EAAA,CAxEQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AA0EZ,MAAM0C,WAAW,GAAG/C,MAAM,CAACoD,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GA1BIN,WAAW;AA4BjB,MAAMH,SAAS,GAAG5C,MAAM,CAACoD,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GA7BIV,SAAS;AA+Bf,eAAevC,GAAG;AAAC,IAAA8C,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}